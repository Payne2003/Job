@using X.PagedList
@model X.PagedList.IPagedList<Category>

@{
    ViewData["Title"] = "Search";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<div class="template-demo">
    <a asp-action="Create" type="button" class="btn btn-outline-success btn-fw">Create New</a>
</div>
<div class="card">
    <div class="card-body">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().CategoryId)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Name)</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr data-id="@item.CategoryId">
                        <td onclick="showCategoryDetails(@Html.DisplayFor(modelItem => item.CategoryId))">@Html.DisplayFor(modelItem => item.CategoryId)</td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>
                            <div class="template-demo">
                                <button type="button"
                                        class="btn btn-outline-danger btn-fw"
                                        onclick="deleteCategory(@item.CategoryId)">
                                    Delete
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="btn-group" role="group" aria-label="Basic example">
    @for (int i = 1; i <= Model.PageCount; i++)
    {
        <button type="button" class="btn btn-outline-secondary">
            @Html.ActionLink(i.ToString(), "Index", new { page = i })
        </button>
    }
</div>

<!-- Modal -->
<div class="modal fade" id="categoryModal" tabindex="-1" aria-labelledby="candidateModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="candidateModalLabel">Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modalImage" style="text-align: center; margin-bottom: 20px;"></div>
                <dl class="row">
                    <dt class="col-sm-3">Name:</dt>
                    <dd class="col-sm-9" id="modalName"></dd>
                </dl>
            </div>
            <div class="modal-footer">
                <div class="template-demo">
                    <button type="button" id="editButton" class="btn btn-outline-warning btn-fw">Edit</button>
                    <button type="button" class="btn btn-outline-light text-black btn-fw" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">

<script type="text/javascript">
    function showCategoryDetails(id) {
        $.ajax({
            url: '/Category/GetCategoryDetails',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(id),
            success: function (category) {
                $('#modalName').text(category.name);
                $('#editButton').data('id', category.categoryId);
                $('#editButton').off('click').on('click', function () {
                    window.location.href = `/Category/Edit/${category.categoryId}`;
                });
                $('#categoryModal').modal('show');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error('Error:', textStatus, errorThrown);
                alert('Cannot load category information.');
            }
        });
    }
    function confirmAction(message, yesCallback, noCallback) {
        // Tạo hộp xác nhận
        const confirmBox = document.createElement("div");
        confirmBox.setAttribute("style", `
                    position: fixed;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    background: white;
                    border: 1px solid #ccc;
                    padding: 20px;
                    z-index: 1000;
                    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                    border-radius: 8px;
                    width: 300px;
                    text-align: center;
                `);

        // Tạo thông điệp
        const messageNode = document.createElement("p");
        messageNode.innerText = message;
        confirmBox.appendChild(messageNode);

        // Tạo nút "Yes"
        const yesButton = document.createElement("button");
        yesButton.innerText = "Yes";
        yesButton.setAttribute("style", `
                    margin-right: 10px;
                    background-color: #28a745;
                    color: white;
                    border: none;
                    border-radius: 4px;
                    padding: 10px 15px;
                    cursor: pointer;
                    transition: background-color 0.3s;
                `);
        yesButton.onmouseover = function () {
            yesButton.style.backgroundColor = "#218838";
        };
        yesButton.onmouseout = function () {
            yesButton.style.backgroundColor = "#28a745";
        };
        yesButton.onclick = function () {
            yesCallback();
            document.body.removeChild(confirmBox);
        };
        confirmBox.appendChild(yesButton);

        // Tạo nút "No"
        const noButton = document.createElement("button");
        noButton.innerText = "No";
        noButton.setAttribute("style", `
                    background-color: #dc3545;
                    color: white;
                    border: none;
                    border-radius: 4px;
                    padding: 10px 15px;
                    cursor: pointer;
                    transition: background-color 0.3s;
                `);
        noButton.onmouseover = function () {
            noButton.style.backgroundColor = "#c82333";
        };
        noButton.onmouseout = function () {
            noButton.style.backgroundColor = "#dc3545";
        };
        noButton.onclick = function () {
            noCallback();
            document.body.removeChild(confirmBox);
        };
        confirmBox.appendChild(noButton);

        // Thêm hộp xác nhận vào body
        document.body.appendChild(confirmBox);
    }
    function deleteCategory(id) {
        confirmAction("Are you sure you want to delete this category?", function () {
            $.ajax({
                url: '/Category/Delete', // Đường dẫn đến phương thức xóa trong controller
                type: 'POST',
                data: { id: id }, // Chuyển đổi id thành JSON
                success: function (response) {
                    // Nếu xóa thành công, tải lại trang
                    location.reload();
                },
                error: function () {
                    // Xử lý khi có lỗi
                    console.log("An error occurred while deleting.");;
                }
            });
        }, function () {
            console.log("Deletion canceled.");
        });
    }

</script>

<link rel="stylesheet" href="../../LayoutAdmin/assets/css/site.css">