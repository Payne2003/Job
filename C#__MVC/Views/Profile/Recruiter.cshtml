@model C___MVC.Models.Recruiter

@{
	ViewData["Title"] = "Profile";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@*
@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet" />
	<style type="text/css">
} *@
<div class="profile_Recruiter ">
	<div class="main-body">
		<div class="row">
			<form asp-action="Recruiter" id="editForm" method="post" enctype="multipart/form-data">
				<div asp-validation-summary="All" class="text-danger"></div>
				<div class="col-lg-4">
					<div class="card">
						<div class="card-body">
							<div class="d-flex flex-column align-items-center text-center">
								<div class="image-container text-center">
									<img id="imagePreview" src="~/images/@Model.Avatar" class="job-image" style="cursor: pointer;" onclick="openMo(); return false;">
								</div>
								<div class="mt-3">
									<h4>@Model.UserName</h4>
									

								</div>

							</div>
							<hr class="my-4">
							<ul class="list-group list-group-flush">
								@if (Model.Links == null || !Model.Links.Any())
								{
										<p class="text-muted">No links to display.</p>
								}
								else
								{
								@foreach (var link in Model.Links)
								{
									@if (link.Name == "Google Maps")
									{
										<li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
											<h6 class="mb-0">
												<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-map-pin me-2 icon-inline text-success">
													<path d="M21 10c0 7-9 13-9 13S3 17 3 10a9 9 0 0 1 18 0z"></path>
													<circle cx="12" cy="10" r="3"></circle>
												</svg>
												@link.Name
											</h6>
											<a href="@link.Description"><span class="text-secondary">@link.Description</span></a>
										</li>
									}
									else if (link.Name == "Instagram")
									{
										<li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
											<h6 class="mb-0">
												<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-instagram me-2 icon-inline text-danger">
													<rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect>
													<path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path>
													<line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line>
												</svg>
												@link.Name
											</h6>
											<a href="@link.Description"><span class="text-secondary">@link.Description</span></a>
										</li>
									}
									else if (link.Name == "YouTube")
									{
										<li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
											<h6 class="mb-0">
												<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-youtube me-2 icon-inline text-danger">
													<path d="M22.54 6.42A2.78 2.78 0 0 0 20.85 5c-1.76-.68-8.85-.68-8.85-.68s-7.09 0-8.85.68A2.78 2.78 0 0 0 1.46 6.42 29.64 29.64 0 0 0 1 12a29.64 29.64 0 0 0 .46 5.58A2.78 2.78 0 0 0 3.15 19c1.76.68 8.85.68 8.85.68s7.09 0 8.85-.68a2.78 2.78 0 0 0 1.69-1.38A29.64 29.64 0 0 0 23 12a29.64 29.64 0 0 0-.46-5.58z"></path>
													<polygon points="9.75 15.02 15.5 12 9.75 8.98 9.75 15.02"></polygon>
												</svg>
												@link.Name
											</h6>
											<a href="@link.Description"><span class="text-secondary">@link.Description</span></a>
										</li>
									}
									else if (link.Name == "Facebook")
									{
										<li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
											<h6 class="mb-0">
												<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-facebook me-2 icon-inline text-primary">
													<path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path>
												</svg>
												@link.Name
											</h6>
											<a href="@link.Description"><span class="text-secondary">@link.Description</span></a>
										</li>
									}

								}
								}
							</ul>
						</div>
					</div>
				</div>
				<div class="col-lg-8">
					<div class="card">
						<input type="hidden" asp-for="RecruiterId" />
						<div class="card-body">
							<div class="row mb-3">
								<div class="col-sm-3">
									<h6 class="mb-0">Full Name</h6>
								</div>
								<div class="col-sm-9 text-secondary">
									<input type="text" class="form-control" asp-for="UserName" readonly />
								</div>
							</div>
							<div class="row mb-3">
								<div class="col-sm-3">
									<h6 class="mb-0">Email</h6>
								</div>
								<div class="col-sm-9 text-secondary">
									<input type="text" class="form-control" asp-for="Email" readonly />
								</div>
							</div>
							<div class="row mb-3">
								<div class="col-sm-3">
									<h6 class="mb-0">Phone</h6>
								</div>
								<div class="col-sm-9 text-secondary">
									<input type="text" class="form-control" asp-for="PhoneNumber" readonly />
								</div>
							</div>
							<div class="row mb-3">
								<div class="col-sm-3">
									<h6 class="mb-0">Gender</h6>
								</div>
								<div class="col-sm-9 text-secondary">
									<select class="form-control" asp-for="Gender" disabled>
										<option value="">Gender</option>
										<option value="Male">Male</option>
										<option value="Female">Female</option>
										<option value="Other">Other</option>
									</select>
								</div>
							</div>
							<div class="row mb-3">
								<div class="col-sm-3">
									<h6 class="mb-0">Countryside</h6>
								</div>
								<div class="col-sm-9 text-secondary">
									<input type="text" class="form-control" asp-for="countryside" readonly />
								</div>
							</div>
							<div class="row mb-3">
								<div class="col-sm-3">
									<h6 class="mb-0">Current Job</h6>
								</div>
								<div class="col-sm-9 text-secondary">
									<input type="text" class="form-control" asp-for="Currentjob" readonly />
								</div>
							</div>

							<!-- Nút Edit và Save Changes trên cùng 1 hàng -->
							<div class="row mt-4">
								<div class="col-sm-3"></div>
								<div class="col-sm-9 text-secondary">
									<input type="button" id="editButton" class="btn btn-primary me-2" value="Edit" onclick="enableEdit()">
									<input type="submit" id="saveButton" class="btn btn-primary" value="Save Changes" disabled>
								</div>
							</div>
						</div>
					</div>
					

					<div id="uploadModal" class="modal">
						<div class="modal-dialog" role="document">
							<div class="modal-content">
								<span class="close" onclick="closeMo();">&times;</span>
								<div class="modal-header">
									<h5 class="modal-title" id="uploadModalLabel">Upload Profile Image</h5>
								</div>
								<div class="modal-body">
									<!-- Form to upload the image -->
									<!-- Image Preview -->
									<div class="text-center">
										<img id="modalImagePreview" src="~/images/@Model.Avatar" class="job-image img-thumbnail rounded-circle" style="width: 150px; height: 150px;">
									</div>
									<div class="form-group mb-4">
										<input asp-for="Avatar" type="file" class="file-upload-default" id="avatarUpload" style="display: none;" onchange="uploadImage();" />
										<button class="custom-button" type="button" onclick="document.getElementById('avatarUpload').click();">Upload Image</button>
										<input type="text" id="fileNameInput" class="file-name-display mt-2" disabled="" placeholder="No file chosen">
									</div>
								</div>
								<div class="modal-footer">
									<button type="button" class="btn btn-secondary" onclick="closeMo();">Close</button>
									<button type="submit" class="btn btn-primary" onclick="closeMo();">Save changes</button>
								</div>
							</div>
						</div>
					</div>


					<div class="row">
						<div class="col-sm-12">
							<div class="card">
								<div class="card-body">
									<h5 class="d-flex align-items-center mb-3">Skills</h5>
									@if (Model.Skills == null || !Model.Skills.Any())
									{
										<p class="text-muted">No skills to display.</p>
									}
									else
									{
									@foreach (var skill in Model.Skills)
									{
										<p>@skill.Name</p>
										<div class="progress mb-3" style="height: 5px">
											<div class="progress-bar bg-primary" role="progressbar" style="width: @skill.Description" aria-valuenow="@skill.Description" aria-valuemin="0" aria-valuemax="100"></div>
										</div>
									}
									}
								</div>
							</div>
						</div>
					</div>
				</div>
			</form>
		</div>
	</div>
</div>




<style>
	.card-body h6 {
		font-size: 18px; /* Adjust the size as needed */
	}

	/* CSS Reset - đưa mọi thứ về giá trị mặc định */
	.row {
		margin-bottom: 15px; /* Add spacing between rows */
	}

	h6 {
		margin-bottom: 5px; /* Reduce margin below headings */
	}

	input.form-control, select.form-control {
		margin-bottom: 10px; /* Add spacing below inputs and selects */
		margin-left: -50px;
	}

	.btn {
		margin-top: 10px; /* Add margin on top of buttons */
	}

	.profile_Recruiter {
		margin: 20px;
		
		margin: 0 auto; /* Căn giữa theo chiều ngang */
		align-items: center;
		display: block;
	}

	.card {
		border: none; /* Remove borders from cards */
		padding: 20px;
		border-radius: 0; /* Remove border radius */
	}

	.image-container {
		margin-bottom: 20px; /* Increased margin for spacing */
	}

	.job-image {
		width: 200px;
		height: 200px;
		object-fit: cover;
		border-radius: 50%;
	}

	.list-group-item {
		padding: 10px 15px; /* Adjusted padding for better spacing */
	}

	.icon-inline {
		width: 20px; /* Adjusted icon size */
		height: 20px;
	}

	h6 {
		margin-bottom: 0; /* Prevent default margin */
	}

	.modal {
		display: none; /* Ẩn modal theo mặc định */
		position: fixed;
		z-index: 1; /* Đưa modal lên trên các phần tử khác */
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		overflow: auto;
		background-color: rgba(0,0,0,0.4); /* Nền mờ cho modal */
	}

	.modal-content {
		background-color: #fefefe;
		margin: 15% auto;
		padding: 20px;
		border: 1px solid #888;
		width: 80%; /* Chiều rộng của modal */
	}

	.close-btn {
		color: #aaa;
		float: right;
		font-size: 28px;
		font-weight: bold;
	}

		.close-btn:hover,
		.close-btn:focus {
			color: black;
			text-decoration: none;
			cursor: pointer;
		}

</style>

<script>
	function enableEdit() {
		// Kích hoạt các trường để cho phép chỉnh sửa
		document.getElementById("UserName").removeAttribute("readonly");
		// document.getElementById("Email").removeAttribute("readonly");
		document.getElementById("PhoneNumber").removeAttribute("readonly");
		document.getElementById("Gender").removeAttribute("disabled");
		document.getElementById("countryside").removeAttribute("readonly");
		document.getElementById("Currentjob").removeAttribute("readonly");

		// Kích hoạt nút Save Changes
		document.getElementById("saveButton").disabled = false;

		// Ẩn nút Edit sau khi kích hoạt chế độ chỉnh sửa
		document.getElementById("editButton").style.display = 'none';
	}
	function openMo() {
		document.getElementById("uploadModal").style.display = "block";
	}

	// Đóng modal
	function closeMo() {
		document.getElementById("uploadModal").style.display = "none";
	}
	function openModal2() {
		document.getElementById("myModal").style.display = "block";
	}

	// Đóng modal
	function closeModal2() {
		document.getElementById("myModal").style.display = "none";
	}

	// Đóng modal khi nhấn ra ngoài modal
	window.onclick = function (event) {
		var modal = document.getElementById("myModal");
		if (event.target == modal) {
			modal.style.display = "none";
		}
	}
	function showFileName() {
		// Lấy đối tượng input file
		var input = document.getElementById('fileselect');
		// Lấy tên file
		var fileName = input.files[0].name;
		// Hiển thị tên file vào phần tử có id là "file-name"
		document.getElementById('file-name').textContent = "File Selected: " + fileName;
	}

	// Hàm upload hình ảnh và cập nhật preview
	function uploadImage() {
		var file = document.getElementById('avatarUpload').files[0];
		var formData = new FormData();
		formData.append("avatar", file);

		$.ajax({
			url: '/Profile/UploadAvatar',
			type: 'POST',
			data: formData,
			processData: false,
			contentType: false,
			success: function (response) {
				var preview = document.getElementById('imagePreview');
				var modalPreview = document.getElementById('modalImagePreview');
				var fileNameInput = document.getElementById('fileNameInput');

				// Lấy tên file mà không có phần mở rộng
				var fileNameWithoutExtension = response.fileName.split('.').slice(0, -1).join('.');

				// Cập nhật ảnh xem trước trên trang chính và trong modal
				preview.src = '/images/' + response.fileName;
				modalPreview.src = '/images/' + response.fileName;

				// Cập nhật tên file
				fileNameInput.value = fileNameWithoutExtension;

				// Gọi hàm enableEdit() để kích hoạt chế độ chỉnh sửa
				// enableEdit();
			},
			error: function () {
				alert("File upload failed.");
			}
		});
	}

</script>